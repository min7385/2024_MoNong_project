<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="
        http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->

	<!-- Oracle DB에 접속할 수 있는 URL과 계정 정보들을 알려준다. -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"
			value="oracle.jdbc.driver.OracleDriver"></property>
		<property name="url"
			value="jdbc:oracle:thin:@192.168.0.44:1521:xe"></property>
		<property name="username" value="blue"></property>
		<property name="password" value="blue"></property>
	</bean>

	<!-- Mybatis 관련 설정파일 및 Dao 객체와 매핑되는 쿼리문(.xml)들의 경로를 알려준다. -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="mapperLocations"
			value="/WEB-INF/classes/mybatis/mapper/*.xml" />
		<property name="configLocation"
			value="/WEB-INF/classes/mybatis/mybatis-config.xml" />
	</bean>

	<!-- @Mapper 어노테이션이 붙은 Dao 객체를 스캔할 수 있도록 함 -->
	<mybatis-spring:scan base-package="com.future.blue"
		annotation="org.apache.ibatis.annotations.Mapper" />

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="104857600" />
		<property name="maxUploadSizePerFile" value="104857600" />
		<property name="maxInMemorySize" value="104857600" />
	</bean>

	<!-- 트랜잭션 매니저 설정 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- @Transactional 활성화 -->
	<tx:annotation-driven
		transaction-manager="transactionManager" />

	<!-- Redis configuration -->
	<bean id="redisTemplate"
		class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory"
			ref="jedisConnectionFactory" />
	</bean>
	<!-- redis 설정 -->
	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="192.168.0.44" />
		<property name="port" value="6379" />
	</bean>

</beans>
